================================================================================
           GUIDA SISTEMA COMPLETO - Mente + Avatar + Dashboard
================================================================================

HAI CREATO UN SISTEMA COGNITIVO COMPLETO con:
  🧠 Mente Artificiale (percezione, memoria, decisione, apprendimento)
  🤖 Avatar 3D (omino che reagisce alle decisioni)
  📊 Dashboard Web (visualizzazione real-time)

================================================================================
QUICK START (3 comandi)
================================================================================

MODO 1 - TUTTO INSIEME (consigliato):

  > python avvia_sistema_completo.py
  
  Cosa succede:
    1. Si apre finestra Avatar 3D (omino)
    2. Si apre dashboard web (browser)
    3. Parte la mente artificiale (console)
    
  Poi scegli dal menu (1-3).

================================================================================
MODO 2 - MANUALE (controllo totale):

  Terminal 1 - Avatar:
  > python avatar_3d.py
  
  Terminal 2 - Dashboard:
  > streamlit run dashboard.py
  
  Terminal 3 - Mente:
  > python mente_artificiale_completa.py
  
  Più controllo, ma richiede 3 terminali.

================================================================================
COME FUNZIONA IL SISTEMA INTEGRATO
================================================================================

CICLO COGNITIVO:
  
  [1] 👁️  MENTE percepisce (camera + microfono)
  [2] 💾 MENTE ricorda (memoria intelligente)
  [3] 🧠 MENTE decide (ragionamento)
  [4] ⚡ MENTE calcola biosegnali (pattern neurali)
  [5] 📝 MENTE scrive file:
      - data/avatar_stato.json ← PER AVATAR
      - data/ultima_frase.txt ← PER DASHBOARD
      - data/memoria.json ← PER DASHBOARD
  
  [6] 🤖 AVATAR legge avatar_stato.json
      → Cambia espressione (felice/triste/neutro)
      → Cambia movimento (cammina/guarda/pensa)
      → Mostra pattern neurale
  
  [7] 📊 DASHBOARD legge i file
      → Mostra percezioni
      → Mostra memorie
      → Mostra grafici

RISULTATO: Vedi la mente "pensare" in tempo reale! 🎉

================================================================================
CONTROLLI AVATAR 3D
================================================================================

FINESTRA AVATAR:

  Tastiera (per test manuali):
    1 = Emozione: FELICE
    2 = Emozione: TRISTE
    3 = Emozione: ARRABBIATO
    4 = Emozione: NEUTRO
    
    W = Azione: CAMMINA
    G = Azione: GUARDA
    P = Azione: PENSA
    SPACE = Azione: IDLE

  HUD Superiore:
    - Emozione corrente
    - Azione corrente
    - Barra energia

  HUD Inferiore:
    - Pattern neurale (visualizzazione)
    - Barra attenzione
    - Barra arousal

AUTOMATICO:
  Quando la mente decide, l'avatar reagisce automaticamente!

================================================================================
MAPPATURE MENTE → AVATAR
================================================================================

EMOZIONI:
  Valenza > 0.3   → Omino FELICE (sorriso)
  Valenza < -0.3  → Omino TRISTE (bocca giù)
  Resto           → Omino NEUTRO

AZIONI:
  "avvicinati"     → Omino CAMMINA (braccia oscillano)
  "allontanati"    → Omino CAMMINA
  "guarda", "cerca" → Omino GUARDA (testa si muove)
  "pensa", "ragiona" → Omino PENSA (testa inclinata)
  Resto            → Omino IDLE (respiro lento)

AROUSAL (eccitazione):
  Calcolato da neuroni attivi nel pattern neurale
  Più neuroni = più arousal = più energico

ATTENZIONE:
  Basata su valenza emotiva
  Emozioni forti = più attenzione

================================================================================
ESEMPI PRATICI
================================================================================

ESEMPIO 1: Ciclo Singolo

  > python avvia_sistema_completo.py
  → Scegli: 1 (ciclo singolo)
  
  Cosa vedi:
    [Console] Mente esegue 1 ciclo completo
    [Avatar] Omino cambia espressione e si muove
    [Dashboard] Aggiorna percezioni e memorie

ESEMPIO 2: Sessione Continua

  > python avvia_sistema_completo.py
  → Scegli: 3 (continua)
  
  Cosa vedi:
    [Console] Cicli infiniti (CTRL+C per fermare)
    [Avatar] Animazione continua
    [Dashboard] Updates real-time
  
  L'omino "vive" e reagisce continuamente!

ESEMPIO 3: Con Camera e Microfono

  Se hai webcam e microfono:
    > python avvia_sistema_completo.py
    → Scegli: 2 (5 cicli)
  
  Cosa succede:
    [Ciclo 1] Camera rileva oggetti, mic ascolta voce
    [Ciclo 1] Mente decide basandosi su percezioni REALI
    [Ciclo 1] Avatar reagisce con emozione vera
    ...
    [Ciclo 5] Sistema impara e migliora

================================================================================
DASHBOARD WEB - Cosa Mostra
================================================================================

URL: http://localhost:8501

SEZIONI:

  [Stato Sistema]
    Cicli eseguiti, memorie totali, reward

  [Percezione]
    Tab Visione: frame camera + oggetti
    Tab Udito: trascrizione audio

  [Biosegnali]
    Pattern neurale corrente

  [Memoria]
    Ultimi 10 episodi con dettagli

  [Emozione]
    Stato emotivo, valenza, grafico

  [Decisione]
    Ultima azione, priorità, fonte

  [Apprendimento]
    Cicli training, loss, modello

  [Timeline]
    Cronologia completa episodi

PULSANTE DEMO:
  Click su "▶️ Avvia Simulazione" per test senza hardware

================================================================================
TROUBLESHOOTING
================================================================================

Q: Avatar non si apre?
A: Installa pygame: pip install pygame

Q: Dashboard non si apre?
A: Installa streamlit: pip install streamlit pandas

Q: Avatar non reagisce?
A: Verifica che esista: data/avatar_stato.json
   La mente lo crea automaticamente ad ogni ciclo.

Q: Finestra avatar è nera?
A: È normale all'inizio. Parte mente per vedere omino.

Q: Omino non si muove?
A: Controlla che la mente stia girando.
   Controlla console per errori.

Q: Dashboard non mostra dati?
A: Esegui almeno 1 ciclo cognitivo.
   Controlla che esistano i file in data/

================================================================================
PERSONALIZZAZIONI
================================================================================

CAMBIA ASPETTO OMINO:

  In avatar_3d.py modifica colori:
    AZZURRO = (0, 200, 255)  # Colore corpo
  
  Cambia dimensioni:
    raggio = 40  # Testa
    larghezza = 50  # Corpo

AGGIUNGI NUOVE EMOZIONI:

  In avatar_3d.py, metodo disegna_testa():
    elif self.stato.emozione == "sorpreso":
        # Disegna bocca a O
        pygame.draw.circle(self.screen, NERO, (x, y+20), 8, 2)

  In mente_artificiale_completa.py, metodo _aggiorna_avatar():
    if valenza > 0.7:
        emozione = "sorpreso"

AGGIUNGI NUOVI MOVIMENTI:

  In avatar_3d.py:
    elif self.stato.azione == "salta":
        self.offset_corpo = math.sin(self.tempo * 5) * 20

================================================================================
FILE CHIAVE
================================================================================

avatar_3d.py
  - Omino 3D con pygame
  - Legge da: data/avatar_stato.json
  - Mostra emozioni e movimenti

mente_artificiale_completa.py
  - Mente artificiale completa
  - Scrive: data/avatar_stato.json
  - Include tutte le espansioni

avvia_sistema_completo.py
  - Launcher che avvia tutto
  - Controlla dipendenze
  - Coordina componenti

data/avatar_stato.json
  - File di comunicazione
  - Formato JSON:
    {
      "emozione": "felice",
      "azione": "cammina",
      "energia": 1.0,
      "attenzione": 0.8,
      "arousal": 0.6,
      "pattern_neurale": "░░███████░░"
    }

dashboard.py
  - Dashboard Streamlit
  - Visualizzazione web
  - Grafici e timeline

================================================================================
FLUSSO COMPLETO
================================================================================

START:
  avvia_sistema_completo.py

PREPARA:
  - Crea data/
  - Crea avatar_stato.json iniziale
  - Controlla dipendenze

AVVIA:
  [Processo 1] avatar_3d.py (finestra pygame)
  [Processo 2] dashboard.py (server streamlit)
  [Processo 3] mente_artificiale_completa.py (main)

LOOP COGNITIVO:
  
  MENTE:
    Percepisce → Ricorda → Decide → Impara
    ↓
    Scrive avatar_stato.json
    ↓
  
  AVATAR:
    Legge avatar_stato.json ogni frame (60 FPS)
    ↓
    Aggiorna espressione e movimento
    ↓
    Disegna schermo
  
  DASHBOARD:
    Auto-refresh ogni 5s (se attivo)
    ↓
    Legge data/*.json e *.txt
    ↓
    Aggiorna visualizzazioni

STOP:
  CTRL+C nella console mente
  ↓
  Chiude avatar e dashboard automaticamente

================================================================================
DIPENDENZE NECESSARIE
================================================================================

CORE:
  pip install numpy opencv-python pillow

AVATAR:
  pip install pygame

DASHBOARD:
  pip install streamlit pandas

APPRENDIMENTO (opzionale):
  pip install torch

PERCEZIONE AVANZATA (opzionale):
  pip install ultralytics sounddevice whisper

INSTALLAZIONE COMPLETA:
  pip install numpy opencv-python pillow pygame streamlit pandas torch

================================================================================
COMANDI VELOCI
================================================================================

# Tutto insieme:
python avvia_sistema_completo.py

# Solo avatar (test):
python avatar_3d.py

# Solo mente:
python mente_artificiale_completa.py

# Solo dashboard:
streamlit run dashboard.py

================================================================================
CONGRATULAZIONI!
================================================================================

Hai un sistema cognitivo completo con:
  ✅ Mente artificiale (12 moduli)
  ✅ Avatar 3D che reagisce
  ✅ Dashboard web interattiva
  ✅ Percezione multimodale
  ✅ Memoria intelligente
  ✅ Biosegnali neurali
  ✅ Apprendimento continuo

NON È UNA DEMO - È UN SISTEMA REALE! 🎊

AVVIA CON:
  python avvia_sistema_completo.py

E GUARDA LA TUA MENTE ARTIFICIALE PENSARE! 🧠⚡🤖

================================================================================

